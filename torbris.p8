pico-8 cartridge // http://www.pico-8.com
version 33
__lua__

function make_color(red,green,blue)
  return {
    r=red, g=green, b=blue
  }
end

function make_box(xx,yy,ww,hh)
  return {
    x=xx, y=yy, w=ww, h=hh
  }
end

blocktypes={I=0, J=1, L=2, O=3, Z=4, S=5, T=6}

// I J L O Z S T

blocksize = 5
LVL_WIDTH=10 LVL_HEIGHT=22
blocks = nil
hitlines = nil
player_next = nil
player = nil

function _init()
 print("main screen turn on")
 blocks = {}
 hitlines = make_array(LVL_HEIGHT, false)
 resetBoard()
 player = resetPlayer(0,0)
 player_next = resetPlayer( flr(rnd()*7) ,0)
-- start music from pattern 0
music(0)


 -- btnp initial delay
poke(0x5f5c,5)
-- btnp repeat delay
poke(0x5f5d,2)
end

earthquake=0
numframes=0 // will wrap around after 18 minutes
gameover=true
player = {}
tim=0

function _update()
  tim = time()
  
  if (btn(‚ùé) ) then 
    earthquake = 2
    sfx(62)
  end

  gameover_this_frame = false
  
  dt=0.05 --1.0/10.0
  if (not gameover) then
     movePlayer(player, dt);
     if ( collidesBottom(player) or collidesAny(player) ) then
       --playsound("put.flac", 20, 1);
       -- play sound 63 on any available channel
       sfx(63)
       gameover = not insertPiece(player)
       
       if (not gameover) then
         tryScore(player)
         respawn(player)
       else
         gameover_this_frame = true
       end
     end
     
    if (earthquake > 0) then
      earthquake -= dt;
      if (earthquake <= 0) then
        earthquake = 0
        compact()
     end
    end
     
  else -- game OVER!
   if gameover_this_frame then
     music(0)
     earthquake=2
   end

   if (btn(‚ùé) or btnp(üÖæÔ∏è) or btn(‚¨ÜÔ∏è) or btn(‚¨áÔ∏è) ) then
      gameover = false
      --playsoundupdate(-1,0);      // Kill all playing sounds
      resetBoard()
      respawn(player)
      player.score = 0
      -- stop the music with a 300 ms fade out
      music(-1, 300)
    end
   
  end--not gameover

end

function err(errcode)
  while(true) do
    cls()
    rectfill(0,0,10,10,4)
    flip()
  end
end

function movePlayer(player, dt)
  player.time_to_speedup -= dt
  if (player.time_to_speedup <= 0) then
    player.time_to_speedup = 5
    --player.time_to_speedup = player.speed * 5;
    --player.speed *= 1.2;
  end

  spd = .1//player.speed
  if (player.fastdrop) spd = .5;//40;
  --spd = min(10,spd); //maxspeed = 30;
  player.y += spd --*dt;
  
  if (spd*dt > 1) err(2); // collision may miss, and we need to to ccd

  if btnp(‚¨ÖÔ∏è) then
    --keystatus[203]=0;
    player.x -= 1
    if (collidesLeft(player) or collidesAny(player) ) player.x+=1
  end
  
  if btnp(‚û°Ô∏è) then
    --keystatus[205]=0;
    player.x += 1;
    if (collidesRight(player) or collidesAny(player) ) player.x-=1
  end
  
  if btnp(‚¨ÜÔ∏è) then
    --keystatus[200] = 0;
    rotate(player, 1);
    if (collidesLeft(player) or collidesRight(player) or collidesAny(player) ) rotate(player, 0);
  end
  
  --if (keystatus[208] ) //down
    --rotate(player, 0);
    --if (collidesLeft(player) || collidesRight(player) || collidesAny(player) ) rotate(player, 1);
  --end

  if (btn(‚¨áÔ∏è)) then
    player.fastdrop=true;
  else
    player.fastdrop=false;
  end
end

function collidesLeft(t)
  n = t.dim
  for i=0, LVL_HEIGHT-1 do
    for y=0, n-1 do
      for x=0, n-1 do
        if (t.data[y*n+x] == 1) then
          bx = flr(t.x) + x;
          --by = flr(t.y) + y;
          if (bx < 0 ) return true
        end
      end
    end
  end
  return false
end

function collidesRight(t)
  n = t.dim
  for i=0, LVL_HEIGHT-1 do
    for y=0, n-1 do
      for x=0, n-1 do
        if (t.data[y*n+x] == 1) then
          bx = flr(t.x) + x;
          --by = flr(t.y) + y;
          if (bx > (LVL_WIDTH-1) ) return true
        end
      end
    end
  end
  return false
end

function collidesBottom(t)
  n = t.dim
  for i=0, LVL_HEIGHT-1 do
    for y=0, n-1 do
      for x=0, n-1 do
        if (t.data[y*n+x] == 1) then
          --bx = flr(t.x) + x;
          by = flr(t.y) + y;
          if (by >= (LVL_HEIGHT-1) ) return true
        end
      end
    end
  end
  return false
end

function collidesAny(t)
  n = t.dim
  for i=0, LVL_HEIGHT-1 do
  for j=0, LVL_WIDTH-1 do
    for y=0, n-1 do
      for x=0,n-1 do
        if (t.data[y*n+x] == 1) then
          bx = flr(t.x) + x
          by = flr(t.y+1) + y--//todo find better solution
          inbounds = bx >= 0 and bx < LVL_WIDTH and by >= 0 and by < LVL_HEIGHT
          if ( inbounds and blocks[by][bx] > 0 ) return true
        end--fi
      end--x
    end--y
  end --j
  end --i
  return false
end

function insertPiece(t)
  num_in = 0 -- are all blocks in piece inside level, then were good
  num_blocks = 0 -- num blocks in piece
  n = t.dim
  for i=0,  n*n-1 do
    if (t.data[i] == 1) then
    num_blocks+=1
    px = i%n
    py = flr(i/n)
    insertx = flr(t.x) + px
    inserty = flr(t.y) + py
    
    for j=0, LVL_WIDTH*LVL_HEIGHT-1 do
    
      lx = j%LVL_WIDTH;
      ly = flr(j/LVL_WIDTH);
      if (lx==insertx and ly==inserty) then
        blocks[ly][lx] = t.color
        --blocks_color[ly*LVL_WIDTH+lx] = t.color;  
        num_in+=1
      end
    end
    end
  end--loop
  return num_in == num_blocks;
end

function respawn(p)
 typ = player_next.type
 player = resetPlayer(typ, player.score)
 player_next = resetPlayer( flr(rnd()*7) , 0)
 player_next.x=-6
 player_next.y=-2
end

function rotate(t, ccw)
  if (t.type==blocktypes.O) return -- Dont rotate O type pieces
  
-- Rotate by +90 (ccw)
-- 1. transpose
-- 2. reverse row

-- Rotate by -90 (cw)
-- 1. reverse row
-- 2. transpose

  if(ccw==1) then
    transpose(t)
    reverse_rows(t)
  else 
    reverse_rows(t)
    transpose(t)
  end
end

function transpose(t)
  n = t.dim
  tmp = make_array(n*n, 0)
    
  for i=0, n*n-1 do
    tmp[i] = t.data[i]
  end
    
  -- transpose
  for y=0, n-1 do
    for x=0, n-1 do
      t.data[x*n+y] = tmp[y*n+x]
    end
  end
end

function reverse_rows(t)
  n = t.dim
  tmp = make_array(n*n, 0)
    
  for i=0, (n*n)-1 do
    tmp[i] = t.data[i]
  end
  
  -- reverse rows
  for y=0, n-1 do
    for x=0, n-1 do
      t.data[y*n+x] = tmp[y*n+(n-1-x)];
    end
  end
end


function resetPlayer(bricktype, score)
  colors = {8,3,12,10,4,2,9,} -- 1 based!!
  brickdim,data = getPiece(bricktype)

  p = {
  x=LVL_WIDTH/2 - brickdim/2,y=-7,
  color=colors[bricktype+1],
  piece = nil,
  type=bricktype, -- I J L O Z S T
  speed=.05,
  fastdrop=false,
  score=score,
  time_to_speedup=5,
  dim=brickdim,
  data = copyarray(data, brickdim*brickdim)
  }  

  return p
end

function copyarray(arr,n)
  copy = {}
  for i=0, n-1 do
    copy[i] = arr[i+1] --aaaaaahahahaha
  end
  return copy
end

function getPiece(i)
if i == 0 then return 4,
 {
  0,0,1,0,
  0,0,1,0,
  0,0,1,0,
  0,0,1,0
 }
elseif i==1 then return 4,
  {    
  0,0,0,0,
  0,0,1,0,
  0,0,1,0,
  0,1,1,0
}
elseif i==2 then return 4,
  {
  0,0,0,0,
  0,1,0,0,
  0,1,0,0,
  0,1,1,0
  }
elseif i==3 then return 2,
  {
  1,1,
  1,1
  }
elseif i==4 then return 4,
{
  0,0,0,0,
  0,0,0,0,
  0,1,1,0,
  0,0,1,1
}
elseif i==5 then return 4,
  {
  0,0,0,0,
  0,0,0,0,
  0,0,1,1,
  0,1,1,0
  }
elseif i==6 then return 3,
  {
  0,0,0,
  1,1,1,
  0,1,0
  }
end

end

function make_array(n, val)
  arr = {}
  for i=0, n-1 do
    arr[i] = val
  end
  return arr
end

function resetBoard()
  blocks = {}
  for row = 0, LVL_HEIGHT-1 do
    blocks[row] = {}
    for column = 0, LVL_WIDTH-1 do
        blocks[row][column] = 0
   end
  end 
end

function compact()
  lines = 0;
  
  for y=0, LVL_HEIGHT-1 do
    if (hitlines[y]) then
      lines += 1;
    end
  end

  player.score += lines

  for line=0, lines do
    for y=0, LVL_HEIGHT-1 do
      yy = LVL_HEIGHT - y
      if (hitlines[yy]) then
         hitlines[yy] = 0
         compactFrom(yy)
      end
    end
  end
end

function compactFrom(y0)
  for y=y0,1,-1 do
    for x=0, LVL_WIDTH-1 do
      hitlines[y] = hitlines[y-1]
      blocks[y][x] = blocks[y-1][x]
    end
 end
end

function tryScore(t)
  for y=0, LVL_HEIGHT-1 do
    if (not hitlines[y]) then
    hit=1
    for x=0, LVL_WIDTH-1 do
      if (blocks[y][x]==0) then
        hit=0
        break
      end
    end

    if (hit==1) then
      hitlines[y] = true
      earthquake = 1;
      sfx(62)
      //playsound("tapfloor.flac");
      --playsound("waterpot.flac",60,.2+.5*rnd);
    end
    end
  end
end

function _draw()
 cls()
 --foreach(blocks,drawblock)
 if (earthquake > 0) then
   camera(-1  + rnd(2), 2 + rnd(4))
 else
   camera()
 end
 drawlevel()
 if (gameover)drawgameover()
 drawpiece(player)
 drawpiece(player_next)
 print("score:"..player.score, 80, 3, 15)
 numframes+=1
end

function drawlevel()
  --for v in all(tbl) do

  -- background
  for row = 0, LVL_HEIGHT-1 do
    for column = 0, LVL_WIDTH-1 do
         outline=1
         if (blocks[row][column] == 0) then
           drawblockoutline( {x=column, y=row, color=1} )
         end
         
   end
  end   

  out=5
  for row = 0, LVL_HEIGHT-1 do
    for column = 0, LVL_WIDTH-1 do
         if (blocks[row][column] != 0) then

         kolor = blocks[row][column]
         if (hitlines[row]) then
           
           if ( numframes % 2 == 0) then
             fillp(0XF99F)
             drawblock( {x=column, y=row, color=14}, out )
             fillp(0X5A5A)
           else
             fillp(0X5A5A)
             drawblock( {x=column, y=row, color=14}, out )
             fillp(0XF99F)
           end
         else
           fillp() 
         end

         drawblock( {x=column, y=row, color=kolor}, out )
         end
   end
  end 
  fillp()
end

function getScreenCoord(b)
  ofx = 30
  ofy = 10
  return ofx+b.x*blocksize, ofy+b.y*blocksize
end

function drawblockoutline(b)
  bx,by = getScreenCoord(b)
  rect(bx, by, bx+blocksize, by+blocksize, b.color)
end

function drawblock(b,outline)
  bx,by = getScreenCoord(b)
  rect(bx, by, bx+blocksize, by+blocksize, outline)
  rectfill(bx+1, by+1, bx+blocksize-1, by+blocksize-1, b.color)
  
  --pal(15,b.color)
  --spr(1,bx,by,5,5)  
  --pal(15,15)
end

function drawpiece(p)
  n = p.dim
  for i=0, (n*n)-1 do
    if (p.data[i] == 1) then
      xx=p.x + i%n
      yy=p.y + flr(i/n)
      
      drawblock( {x=xx, y=yy, color=p.color}, 15 )

    end
  end

end

function drawgameover()
  maxrot = flr(tim*5) % 4;
  print("game over", 37, 9,15)
  ofs = 0
  for i=0, 6 do
    p = resetPlayer(i,0)
    p.x = -6 + ofs
    p.y = 3 
    ofs += p.dim

    for rot=0, maxrot-1 do
      rotate(p,0)
    end
    drawpiece(p)
  end

  p = resetPlayer(0,0)
  p.x = -5
  p.y = 10
  drawpiece(p)
  p = resetPlayer(1,0)
  p.x = -4
  p.y = 8
  rotate(p,0)
  drawpiece(p)

  p = resetPlayer(1,0)
  p.x = -5
  p.y = 7
  rotate(p,1)
  drawpiece(p)

  p = resetPlayer(2,0)
  p.x = 1
  p.y = 10
  rotate(p,1)
  drawpiece(p)
  p = resetPlayer(2,0)
  p.x = 3
  p.y = 11
  rotate(p,1)
  rotate(p,1)
  drawpiece(p)
  p = resetPlayer(2,0)
  p.x = 2
  p.y = 13
  rotate(p,1)
  rotate(p,1)
  rotate(p,1)
  drawpiece(p)
end

__gfx__
00000000dddddd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000effffd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700effffd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000effffd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000effffd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700eeeeed000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000e00000c0433f2151b3350000024443240433f215000000c043000003f2153f215246433f2151b335000000c0433f3153f2151b3352464324043135003f4150c043000003f2151b33524643240433f21500000
010e00000c04316000190001b0000c0431b00016000160000c04316000190001b0000c0431b0001b000160000c04316000190001b0000c0431b0001b000180000c04316000190001b0000c0431b0001b00018000
010e00200c1430e1430c1400e1400c0400e1400c1400e0400c1400e1400c0400e1400c1400e0400c1400e0400c0400e1400c1400e0400c1400e1400c0400e0400c1400e0400c0400e1400c1400e0400c0400e040
010e00001574315743157331572315713157031570015700157031570315703157031570315703157031570315703157031570315703157031570315703157031570315703157031570315703157031570315703
010e00001f0401f0401b0401b040160401604014040140401f0401f0401b0401b0401604016040140401404020040200401b0401b0401804018040160401604020040200401b0401b04018040180401604016040
010e00001f3421f3421b3421b342164421644214442144421f3421f3421b3421b3421644216442144421444220342203421b3421b3420f4420f442164421644220342203421b3421b3420f4420f4421644216442
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000500000e450090500c4500d030104300f0301142010020114201202012410140101341016010170101a7101c11020710211102371024110277101e0001f0002000022000240002600000000000000000000000
001000002771003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
01 04404142
00 43400104
00 41400104
02 41400105

